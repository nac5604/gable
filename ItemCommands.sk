# Class Name: ItemCommands.sk
# Author: nac#3030
# Deps: skript-YAML, SkBee

# Gives the player a sword with the specified rarity.
command /giveSword <text> <text>:
	permission: admin.sword.give
	trigger:
		Sword_Give(arg-1, arg-2, player)
		send "Given sword '%arg-1%' with rarity '%arg-2%'."

# Register a sword in-game.
command /registerSword <text> <text> <num>:
	permission: admin.sword.register
	trigger:
		set {_a2} to arg-2
		replace all """" with "" in {_a2}

		load yaml "plugins/Skript/scripts/XS-Data/properties/swords.yaml" as "swords.yaml"

		if yaml node arg-1 in "swords.yaml" exists:
			send "This entry already exists." to player
		else:
			set {_enchantments::*} to enchantments of player's tool
			Sword_Register(arg-1, player's tool, {_a2}, {_enchantments::*}, arg-3)
	
		save yaml "swords.yaml"
		unload yaml "swords.yaml"

# Register a rarity in-game.
command /registerRarity <text> <text> <num> <text>:
	permission: admin.rarity.register
	trigger:
		set {_a2} to arg-2
		replace all """" with "" in {_a2}
		
		load yaml "plugins/Skript/scripts/XS-Data/properties/rarities.yaml" as "rarities.yaml"

		if yaml node arg-1 in "rarities.yaml" exists:
			send "This entry already exists." to player
		else:
			Rarity_Register(arg-1, arg-2, arg-3, arg-4)
		
		save yaml "rarities.yaml"
		unload yaml "rarities.yaml"

# Tab completions for /giveSword.
on tab complete of "/giveSword":
	set tab completions for position 1 to GetRootNodes("plugins/Skript/scripts/XS-Data/properties/swords.yaml")
	set tab completions for position 2 to GetRootNodes("plugins/Skript/scripts/XS-Data/properties/rarities.yaml")

# Tab completions for /registerRarity.
on tab complete of "/registerRarity":
	set tab completions for position 4 to "MULTIPLY" and "ADD"

on damage:

	load yaml "plugins/Skript/scripts/XS-Data/properties/rarities.yaml" as "rarities.yaml"
	load yaml "plugins/Skript/scripts/XS-Data/properties/swords.yaml" as "swords.yaml"

	set {_swordId} to "YAML-ID" tag of nbt of attacker's tool
	set {_swordRarity} to "YAML-Rarity" tag of nbt of attacker's tool

	set {_swordDamage} to yaml value "%{_swordId}%.Damage" in "swords.yaml"
	set {_swordDamage.rarityMod} to yaml value "%{_swordRarity}%.Damage.Multi" in "rarities.yaml"
	set {_swordDamage.rarityMod.Type} to yaml value "%{_swordRarity}%.Damage.Type" in "rarities.yaml"

	if {_swordDamage.rarityMod.Type} is "ADD":
		set {_dmg} to {_swordDamage} + {_swordDamage.rarityMod}
	else if {_swordDamage.rarityMod.Type} is "MULTIPLY":
		set {_dmg} to {_swordDamage} * {_swordDamage.rarityMod}

	unload yaml "rarities.yaml"
	unload yaml "swords.yaml"

	set damage to {_dmg}

	send action bar "&4%{_dmg} ? damage%" to attacker